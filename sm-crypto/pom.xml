<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.2.RELEASE</version>
        <relativePath/>
    </parent>

	<groupId>github-dot-com.stackdocker.glusterfs</groupId>
	<artifactId>sm-crypto</artifactId>
    <version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<description>SM/ECC decrypto for Spring Boot</description>

    <properties>
        <main.basedir>${basedir}/../..</main.basedir>
        <glusterfs.server>172.17.4.200</glusterfs.server>
        <glusterfs.volume>foo</glusterfs.volume>
        <exec.mainClass>objectstack.App</exec.mainClass>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <it.skip>true</it.skip>
        <skipTests>true</skipTests>
    </properties>

	<dependencies>
        <dependency>
            <groupId>com.sansec.jce</groupId>
            <artifactId>swxaprovider</artifactId>
            <version>2.1.24</version>
            <systemPath>${project.basedir}/lib/SwxaJCE.jar</systemPath>
            <scope>system</scope>
        </dependency>

        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <version>3.4.0</version>
        </dependency>
	
	    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-devtools</artifactId>
		  <optional>true</optional>
		</dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
		
        <dependency>
            <groupId>com.peircean.glusterfs</groupId>
            <artifactId>glusterfs-java-filesystem</artifactId>
            <version>1.0.5-SNAPSHOT</version>
        </dependency>
    </dependencies>
	
    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>

	    <pluginManagement>
	      <plugins>
	        <!-- We specify the Maven compiler plugin as we need to set it to Java 1.8 -->
	        <plugin>
	          <artifactId>maven-compiler-plugin</artifactId>
	          <version>3.1</version>
	          <configuration>
	            <source>1.8</source>
	            <target>1.8</target>
	          </configuration>
	        </plugin>
	      </plugins>
	    </pluginManagement>
        
        <plugins>
		    <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-failsafe-plugin</artifactId>
		      <configuration>
		        <skip>${it.skip}</skip>
		      </configuration>
		    </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
			      <executions>
			        <execution>
			          <id>pre-integration-test</id>
			          <goals>
			            <goal>start</goal>
			          </goals>
			          <configuration>
			            <skip>${it.skip}</skip>
			          </configuration>
			        </execution>
			        <execution>
			          <id>post-integration-test</id>
			          <goals>
			            <goal>stop</goal>
			          </goals>
			          <configuration>
			            <skip>${it.skip}</skip>
			          </configuration>
			        </execution>
			      </executions>
            </plugin>
            
            <!-- https://github.com/fabric8io/docker-maven-plugin -->
			<plugin>
             <groupId>io.fabric8</groupId>
             <artifactId>docker-maven-plugin</artifactId>
             <version>0.20.0</version>
             <extensions>true</extensions>
			 <configuration>
			   <images>
			     <image>
			       <name>tangfeixiong/mock-sm-crypto</name>
			       <build>
			         <dockerFileDir>${project.basedir}/src/main/docker/fabric8-dot-io</dockerFileDir>
			         <assembly>
                       <descriptorRef>artifact-with-dependencies</descriptorRef>
                     </assembly>
			       </build>
			     </image>
			   </images>
			 </configuration>
			</plugin>

            <!-- https://github.com/spotify/docker-maven-plugin -->
		    <plugin>
		      <groupId>com.spotify</groupId>
		      <artifactId>docker-maven-plugin</artifactId>
		      <version>0.4.13</version>
		      <configuration>
		        <imageName>tangfeixiong/mock-sm-crypto</imageName>
		        <dockerDirectory>${project.basedir}/src/main/docker/spotify-dot-com</dockerDirectory>
		        <resources>
		           <resource>
		             <targetPath>/</targetPath>
		             <directory>${project.build.directory}</directory>
		             <include>${project.build.finalName}.jar</include>
		           </resource>
		        </resources>
		      </configuration>
		    </plugin>

            <!-- https://github.com/fabric8io/fabric8-maven-plugin -->
		    <plugin>
		      <groupId>io.fabric8</groupId>
		      <artifactId>fabric8-maven-plugin</artifactId>
		      <version>3.2.28</version>	
		      <configuration>
		        <resources>
		          <labels>
		            <all>
		              <testProject>spring-boot-glusterfs-os-ext</testProject>
		            </all>
		          </labels>
		        </resources>
		        
			    <images>
			      <image>
			        <name>tangfeixiong/mock-sm-crypto</name>
			        <build>
			          <dockerFileDir>${project.basedir}/src/main/docker/fabric8-dot-io</dockerFileDir>
			          <assembly>
                        <descriptorRef>artifact-with-dependencies</descriptorRef>
                      </assembly>
			        </build>
			      </image>
			    </images>
		
		        <generator>
		          <config>
		            <spring-boot>
		              <color>always</color>
		            </spring-boot>
		          </config>
		        </generator>
		        
		        <enricher>
		          <excludes>
		            <exclude>build</exclude>
		          </excludes>
		          <config>
		            <fmp-service>
		              <type>NodePort</type>
		            </fmp-service>
		          </config>
		        </enricher>
		      </configuration>
		
		      <executions>
		        <execution>
		          <goals>
		            <goal>resource</goal>
		            <goal>build</goal>
		            <goal>helm</goal>
		          </goals>
		        </execution>
		      </executions>
		    </plugin>

			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-shade-plugin</artifactId>
			  <version>2.3</version>
			  <executions>
			    <execution>
			      <phase>package</phase>
			      <goals>
			        <goal>shade</goal>
			      </goals>
			      <configuration>
			        <transformers>
			          <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
			            <manifestEntries>
			              <Main-Class>${exec.mainClass}</Main-Class>
			            </manifestEntries>
			          </transformer>
			          <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
			            <resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
			          </transformer>
			        </transformers>
			        <artifactSet>
			        </artifactSet>
			        <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
			      </configuration>
			    </execution>
			  </executions>
			</plugin>
                
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <!-- run the application using the fat jar -->
                        <id>run-app</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-classpath</argument>
                        <!-- automatically creates the classpath using all project dependencies,
                             also adding the project build directory -->
                        <classpath />
                        <argument>-jar</argument>
                        <argument>target/${project.artifactId}-${project.version}-fat.jar</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>

	<profiles>
	  <profile>
	    <id>staging</id>
	    <repositories>
	      <repository>
	        <id>staging</id>
	        <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
	      </repository>
	    </repositories>
	  </profile>
	</profiles>
</project>
