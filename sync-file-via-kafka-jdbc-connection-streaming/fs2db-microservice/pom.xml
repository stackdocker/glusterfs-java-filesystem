<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.2.RELEASE</version>
        <relativePath/>
    </parent>

	<groupId>github-dot-com.stackdocker.glusterfs</groupId>
	<artifactId>fs2db-via-kafka-jdbc-streaming</artifactId>
    <version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<description>File Synchronizer via Apache Kafka streaming with JDBC connector for Spring Boot</description>

    <properties>
        <start-class>syncstack.App</start-class>
        <glusterfs.server>172.17.4.200</glusterfs.server>
        <glusterfs.volume>foo</glusterfs.volume>
        <kafka.version>0.10.2.0</kafka.version>
        <goldengate.version>12.1.2.1.2.002</goldengate.version>
        <confluent.maven.repo>http://packages.confluent.io/maven/</confluent.maven.repo>
        <powermock.version>1.6.3</powermock.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <it.skip>true</it.skip>
        <skipTests>true</skipTests>
    </properties>

	<repositories>
        <repository>
            <id>apache-repo</id>
            <name>Apache Repository</name>
            <url>https://repository.apache.org/content/repositories/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

	    <repository>
	        <id>repo.spring.io.milestone</id>
	        <name>Spring Framework Maven Milestone Repository</name>
	        <url>https://repo.spring.io/libs-milestone</url>
	    </repository>

        <repository>
            <id>confluent</id>
            <name>Confluent</name>
            <url>${confluent.maven.repo}</url>
        </repository>	  
	</repositories>
  
	<dependencies>
	    <dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <version>4.12</version>
	      <scope>test</scope>
	    </dependency>
	    <dependency>
	    	<groupId>org.hamcrest</groupId>
	    	<artifactId>hamcrest-all</artifactId>
	    	<version>1.3</version>
	    	<scope>test</scope>
	    </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-javaagent</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-integration</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-devtools</artifactId>
		  <optional>true</optional>
		</dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-kafka</artifactId>
            <version>3.0.0.BUILD-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-java-dsl</artifactId>
            <version>1.2.1.RELEASE</version>
        </dependency>
	    <dependency>
	      <groupId>org.springframework.integration</groupId>
	      <artifactId>spring-integration-core</artifactId>
	      <version>5.0.0.M2</version>
	      <scope>compile</scope>
	    </dependency>
	    <dependency>
	        <groupId>org.springframework.kafka</groupId>
	        <artifactId>spring-kafka</artifactId>
	        <version>2.0.0.BUILD-SNAPSHOT</version>
	        <scope>compile</scope>
	    </dependency>
	    <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.10</artifactId>
            <version>${kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-api</artifactId>
            <version>${kafka.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-connect-jdbc</artifactId>
            <version>3.2.0</version>
        </dependency>
            
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.8.11.2</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.4-1206-jdbc41</version>
            <scope>runtime</scope>
        </dependency>
	    <dependency>
	      <groupId>mysql</groupId>
	      <artifactId>mysql-connector-java</artifactId>
	      <version>5.1.39</version>
	    </dependency>
		<!-- https://mvnrepository.com/artifact/com.tuplejump/kafka-connect-cassandra_2.11 -->
		<dependency>
		    <groupId>com.tuplejump</groupId>
		    <artifactId>kafka-connect-cassandra_2.11</artifactId>
		    <version>0.0.7</version>
		</dependency>

	    <dependency>
	      <groupId>org.apache.commons</groupId>
	      <artifactId>commons-lang3</artifactId>
	      <version>3.4</version>
	    </dependency>
	    <dependency>
	        <groupId>commons-codec</groupId>
	        <artifactId>commons-codec</artifactId>
	        <version>1.9</version>
	    </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
            <scope>provided</scope>
        </dependency>
	    <dependency>
	    	<groupId>org.antlr</groupId>
	    	<artifactId>antlr4-runtime</artifactId>
	    	<version>4.5</version>
	    </dependency>
	    <dependency>
	    	<groupId>com.zendesk</groupId>
	    	<artifactId>open-replicator</artifactId>
	    	<version>1.6.0</version>
	    </dependency>
	    <dependency>
	      <groupId>com.github.shyiko</groupId>
	      <artifactId>mysql-binlog-connector-java</artifactId>
	      <version>0.7.3</version>
	    </dependency>
	    <dependency>
	    	<groupId>net.sf.jopt-simple</groupId>
	    	<artifactId>jopt-simple</artifactId>
	    	<version>4.9</version>
	    </dependency>
	    <dependency>
	    	<groupId>net.snaq</groupId>
	    	<artifactId>dbpool</artifactId>
	    	<version>7.0.1</version>
	    </dependency>
	    <dependency>
	      <groupId>com.djdch.log4j</groupId>
	      <artifactId>log4j-staticshutdown</artifactId>
	      <version>1.1.0</version>
	    </dependency>
	    <dependency>
	      <groupId>com.vividsolutions</groupId>
	      <artifactId>jts</artifactId>
	      <version>1.13</version>
	    </dependency>
	    <dependency>
	      <groupId>net.jpountz.lz4</groupId>
	      <artifactId>lz4</artifactId>
	      <version>1.3.0</version>
	    </dependency>
        
	    <dependency>
	      <groupId>com.justone</groupId>
	      <artifactId>justone-json</artifactId>
	      <version>1.0.1</version>
	    </dependency>
	    <dependency>
	      <groupId>com.justone</groupId>
	      <artifactId>justone-pgwriter</artifactId>
	      <version>1.0</version>
	    </dependency>                        
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.4.1.Final</version>
        </dependency>

	    <dependency>
	      <groupId>com.fasterxml.jackson.core</groupId>
	      <artifactId>jackson-core</artifactId>
	      <version>2.8.7</version>
	    </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.7</version>
        </dependency>
            
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
	    <dependency>
	    	<groupId>org.apache.logging.log4j</groupId>
	    	<artifactId>log4j-core</artifactId>
	    	<version>2.1</version>
	    </dependency>
	    <dependency>
	    	<groupId>org.apache.logging.log4j</groupId>
	    	<artifactId>log4j-slf4j-impl</artifactId>
	    	<version>2.1</version>
	    </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.21</version>
            <scope>provided</scope>
        </dependency>
	    <dependency>
	      <groupId>org.slf4j</groupId>
	      <artifactId>jul-to-slf4j</artifactId>
	      <version>1.7.21</version>
	    </dependency>

		<!-- https://mvnrepository.com/artifact/com.ceph/libcephfs -->
		<dependency>
		    <groupId>com.ceph</groupId>
		    <artifactId>libcephfs</artifactId>
		    <version>0.80.5</version>
		</dependency>
		<dependency>
		    <groupId>com.google.jimfs</groupId>
		    <artifactId>jimfs</artifactId>
		    <version>1.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/co.paralleluniverse/javafs -->
		<dependency>
		    <groupId>co.paralleluniverse</groupId>
		    <artifactId>javafs</artifactId>
		    <version>0.1.0</version>
		</dependency>
        <dependency>
            <groupId>com.peircean.glusterfs</groupId>
            <artifactId>glusterfs-java-filesystem</artifactId>
            <version>1.0.5-SNAPSHOT</version>
        </dependency>
		<dependency>
		  <groupId>org.apache.commons</groupId>
		  <artifactId>commons-vfs2</artifactId>
		  <version>2.0</version>
		</dependency>		
 
		<dependency>
		  <groupId>com.datastax.spark</groupId>
		  <artifactId>spark-cassandra-connector</artifactId>
		  <version>2.2.0</version>
		</dependency>		
 
		<dependency>
		  <groupId>com.tuplejump</groupId>
		  <artifactId>kafka-connect-cassandra</artifactId>
		  <version>0.0.7</version>
		</dependency>		

        <dependency>
            <groupId>com.oracle.goldengate</groupId>
            <artifactId>ggdbutil</artifactId>
            <version>${goldengate.version}</version>
            <systemPath>${project.basedir}/lib/ggdbutil-${goldengate.version}.jar</systemPath>
            <scope>system</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.goldengate</groupId>
            <artifactId>gguserexitapi</artifactId>
            <version>${goldengate.version}</version>
            <systemPath>${project.basedir}/lib/gguserexitapi-${goldengate.version}.jar</systemPath>
            <scope>system</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.goldengate</groupId>
            <artifactId>ggutil</artifactId>
            <version>${goldengate.version}</version>
            <systemPath>${project.basedir}/lib/ggutil-${goldengate.version}.jar</systemPath>
            <scope>system</scope>
        </dependency>
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>17.0</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.3</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
	
    <build>
        <finalName>${project.artifactId}</finalName>
<!--         <directory>${project.basedir}/target</directory> -->
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
		    <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-failsafe-plugin</artifactId>
		      <configuration>
		        <skip>${it.skip}</skip>
		      </configuration>
		    </plugin>
		    
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
			      <version>1.5.2.RELEASE</version>
			      <configuration>
			        <mainClass>${start-class}</mainClass>
			        <layout>jar</layout>
			      </configuration>
			      <executions>
			        <execution>
			          <id>pre-integration-test</id>
			          <goals>
			            <goal>start</goal>
			          </goals>
			          <configuration>
			            <skip>${it.skip}</skip>
			          </configuration>
			        </execution>
			        <execution>
			          <id>post-integration-test</id>
			          <goals>
			            <goal>stop</goal>
			          </goals>
			          <configuration>
			            <skip>${it.skip}</skip>
			          </configuration>
			        </execution>
			      </executions>
            </plugin>
            
            <!-- https://github.com/fabric8io/docker-maven-plugin -->
			<plugin>
             <groupId>io.fabric8</groupId>
             <artifactId>docker-maven-plugin</artifactId>
             <version>0.20.0</version>
             <extensions>true</extensions>
			 <configuration>
			   <images>
			     <image>
			       <name>tangfeixiong/mock-sync-via-db-and-kafka</name>
			       <build>
			         <dockerFileDir>${project.basedir}/src/main/docker/fabric8-dot-io</dockerFileDir>
			         <assembly>
                       <descriptorRef>artifact-with-dependencies</descriptorRef>
                     </assembly>
			       </build>
			     </image>
			   </images>
			 </configuration>
			</plugin>

            <!-- https://github.com/spotify/docker-maven-plugin -->
		    <plugin>
		      <groupId>com.spotify</groupId>
		      <artifactId>docker-maven-plugin</artifactId>
		      <version>0.4.13</version>
		      <configuration>
		        <imageName>tangfeixiong/mock-sync-via-db-and-kafka</imageName>
		        <dockerDirectory>${project.basedir}/src/main/docker/spotify-dot-com</dockerDirectory>
		        <resources>
		           <resource>
		             <targetPath>/</targetPath>
		             <directory>${project.build.directory}</directory>
		             <include>${project.build.finalName}.jar</include>
		           </resource>
		        </resources>
		      </configuration>
		    </plugin>

            <!-- https://github.com/fabric8io/fabric8-maven-plugin -->
		    <plugin>
		      <groupId>io.fabric8</groupId>
		      <artifactId>fabric8-maven-plugin</artifactId>
		      <version>3.2.28</version>	
		      <configuration>
		        <resources>
		          <labels>
		            <all>
		              <testProject>spring-boot-glusterfs-os-ext</testProject>
		            </all>
		          </labels>
		        </resources>
		        
			    <images>
			      <image>
			        <name>tangfeixiong/mock-sync-via-db-and-kafka</name>
			        <build>
			          <dockerFileDir>${project.basedir}/src/main/docker/fabric8-dot-io</dockerFileDir>
			          <assembly>
                        <descriptorRef>artifact-with-dependencies</descriptorRef>
                      </assembly>
			        </build>
			      </image>
			    </images>
		
		        <generator>
		          <config>
		            <spring-boot>
		              <color>always</color>
		            </spring-boot>
		          </config>
		        </generator>
		        
		        <enricher>
		          <excludes>
		            <exclude>build</exclude>
		          </excludes>
		          <config>
		            <fmp-service>
		              <type>NodePort</type>
		            </fmp-service>
		          </config>
		        </enricher>
		      </configuration>
		
		      <executions>
		        <execution>
		          <goals>
		            <goal>resource</goal>
		            <goal>build</goal>
		            <goal>helm</goal>
		          </goals>
		        </execution>
		      </executions>
		    </plugin>
    
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-classpath</argument>
                        <!-- automatically creates the classpath using all project dependencies,
                             also adding the project build directory -->
                        <classpath />
                        <argument>${start-class}</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
